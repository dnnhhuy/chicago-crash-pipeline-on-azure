{
	"name": "crawldata",
	"properties": {
		"description": "Crawl Crashes Data from API",
		"activities": [
			{
				"name": "Crawl Data",
				"type": "DatabricksNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/1751071@student.hcmus.edu.vn/Crawl Data from API"
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Transfrom Data",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "Crawl Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Users/1751071@student.hcmus.edu.vn/Transform data"
				},
				"linkedServiceName": {
					"referenceName": "AzureDatabricks1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Transfrom Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.inputParameter",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "CopyFromBlobToSQL",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "ParquetReadSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "StarSchemaTables",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"inputParameter": {
				"type": "array",
				"defaultValue": [
					{
						"sourceFolder": "dim_time",
						"destinationTable": "DimTime"
					},
					{
						"sourceFolder": "dim_date",
						"destinationTable": "DimDate"
					},
					{
						"sourceFolder": "dim_location",
						"destinationTable": "DimLocation"
					},
					{
						"sourceFolder": "road_cond_mini_dim",
						"destinationTable": "RoadCondMiniDim"
					},
					{
						"sourceFolder": "control_device_cond_mini_dim",
						"destinationTable": "ControlDeviceCondMiniDim"
					},
					{
						"sourceFolder": "dim_road_cond",
						"destinationTable": "DimRoadCond"
					},
					{
						"sourceFolder": "dim_control_device_cond",
						"destinationTable": "DimControlDeviceCond"
					},
					{
						"sourceFolder": "bridge_vehicle_group",
						"destinationTable": "BridgeVehicleGroup"
					},
					{
						"sourceFolder": "dim_vehicle",
						"destinationTable": "DimVehicle"
					},
					{
						"sourceFolder": "dim_collision",
						"destinationTable": "DimCollision"
					},
					{
						"sourceFolder": "dim_report_type",
						"destinationTable": "DimReportType"
					},
					{
						"sourceFolder": "bridge_person_group",
						"destinationTable": "BridgePersonGroup"
					},
					{
						"sourceFolder": "dim_person",
						"destinationTable": "DimPerson"
					},
					{
						"sourceFolder": "dim_weather",
						"destinationTable": "DimWeather"
					},
					{
						"sourceFolder": "dim_junk",
						"destinationTable": "DimJunk"
					},
					{
						"sourceFolder": "dim_cause",
						"destinationTable": "DimCause"
					},
					{
						"sourceFolder": "dim_crash_type",
						"destinationTable": "DimCrashType"
					},
					{
						"sourceFolder": "fact_crash",
						"destinationTable": "FactCrash"
					}
				]
			}
		},
		"annotations": []
	}
}